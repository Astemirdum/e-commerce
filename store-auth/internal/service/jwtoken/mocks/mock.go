// Code generated by MockGen. DO NOT EDIT.
// Source: jwt.go

// Package mock_jwtoken is a generated GoMock package.
package mock_jwtoken

import (
	reflect "reflect"

	jwtoken "github.com/Astemirdum/e-commerce/store-auth/internal/service/jwtoken"
	models "github.com/Astemirdum/e-commerce/store-auth/models"
	gomock "github.com/golang/mock/gomock"
)

// MockJwtToken is a mock of JwtToken interface.
type MockJwtToken struct {
	ctrl     *gomock.Controller
	recorder *MockJwtTokenMockRecorder
}

// MockJwtTokenMockRecorder is the mock recorder for MockJwtToken.
type MockJwtTokenMockRecorder struct {
	mock *MockJwtToken
}

// NewMockJwtToken creates a new mock instance.
func NewMockJwtToken(ctrl *gomock.Controller) *MockJwtToken {
	mock := &MockJwtToken{ctrl: ctrl}
	mock.recorder = &MockJwtTokenMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJwtToken) EXPECT() *MockJwtTokenMockRecorder {
	return m.recorder
}

// GenerateToken mocks base method.
func (m *MockJwtToken) GenerateToken(user *models.User) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateToken", user)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateToken indicates an expected call of GenerateToken.
func (mr *MockJwtTokenMockRecorder) GenerateToken(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateToken", reflect.TypeOf((*MockJwtToken)(nil).GenerateToken), user)
}

// ParseToken mocks base method.
func (m *MockJwtToken) ParseToken(accessToken string) (*jwtoken.JwtClaims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ParseToken", accessToken)
	ret0, _ := ret[0].(*jwtoken.JwtClaims)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ParseToken indicates an expected call of ParseToken.
func (mr *MockJwtTokenMockRecorder) ParseToken(accessToken interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ParseToken", reflect.TypeOf((*MockJwtToken)(nil).ParseToken), accessToken)
}
