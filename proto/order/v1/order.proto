syntax = 'proto3';

package order.v1;

option go_package = 'github.com/Astemirdum/e-commerce/proto/order;orderv1';

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Order service";
    version: "v1";
  };
  schemes: [HTTP, HTTPS];
  base_path: "";
  consumes: "application/json";
  produces: "application/json";
  responses: {
    key: "403";
    value: {
      description: "Returned when the user does not have permission to access the resource.";
    }
  }
  responses: {
    key: "404";
    value: {
      description: "Returned when the resource does not exist.";
      schema: {
        json_schema: {
          type: STRING;
        }
      }
    }
  }
  responses: {
    key: "501";
    value: {
      description: "Returned when the method does not exist.";
      schema: {
        json_schema: {
          type: STRING;
        }
      }
    }
  }
};

service OrderService {
 rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse) {
   option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
     summary: "create product";
   };
   option (google.api.http) = {
     post: "/api/v1/create-order";
     body: "*";
   };
 }
}

message CreateOrderRequest {
  int64 product_id = 1 [json_name = 'product_id'];
  int64 count = 3 [json_name = 'count'];
}

message CreateOrderResponse {
    int64 id = 1 [json_name = 'id'];
}
